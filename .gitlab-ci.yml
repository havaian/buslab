stages:
  - deploy

deploy:
  stage: deploy
  tags:
    - shell
  variables:
    PROJECT_DIR: "/home/root/projects/buslab"
    GIT_STRATEGY: none  # Prevent automatic checkout completely
  script:
    - echo "Starting deployment..."
    - |
      if [ -d "$PROJECT_DIR" ]; then
        echo "Directory exists, checking if it's a git repository..."
        if [ -d "$PROJECT_DIR/.git" ]; then
          echo "Git repository already exists, will update it"
          cd $PROJECT_DIR
        else
          echo "Directory exists but is not a git repository, cloning fresh..."
          rm -rf $PROJECT_DIR
          git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@${CI_SERVER_HOST}/${CI_PROJECT_PATH}.git $PROJECT_DIR
          cd $PROJECT_DIR
        fi
      else
        echo "Directory does not exist, cloning repository..."
        mkdir -p $(dirname "$PROJECT_DIR")
        git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@${CI_SERVER_HOST}/${CI_PROJECT_PATH}.git $PROJECT_DIR
        cd $PROJECT_DIR
      fi
    - echo "✅ Pulling latest changes..."
    - git checkout main || { echo "❌ Git checkout failed"; exit 1; }
    - git pull origin main || { echo "❌ Git pull failed"; exit 1; }
    - echo "✅ Executing deployment script..."
    # Run the deploy script
    - chmod +x deploy.sh
    - ./deploy.sh
  after_script:
    - |
      if [ -d "$PROJECT_DIR/.git" ]; then
        cd $PROJECT_DIR && git remote set-url origin https://${CI_SERVER_HOST}/${CI_PROJECT_PATH}.git
      fi
  only:
    - main